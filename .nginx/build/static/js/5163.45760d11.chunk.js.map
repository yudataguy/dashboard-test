{"version":3,"file":"static/js/5163.45760d11.chunk.js","mappings":"mOAGA,MAkGA,EAlGqBA,KACnB,MA8BOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,IACpCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,GA2BjC,OAzBAK,EAAAA,EAAAA,YAAU,KACYC,WAClB,IACE,MAAMC,QAAiBC,MAAM,GAADC,OATlB,OAS6B,6BAAAA,OAA4BN,GAAQ,CACzEO,OAAQ,MACRC,QAAS,CACP,eAAgB,qCAGpB,IAAKJ,EAASK,GACZ,MAAM,IAAIC,MAAM,uBAADJ,OAAwBF,EAASO,SAElD,MAAMC,QAAaR,EAASS,OACtBlB,EAASmB,KAAKC,MAAMC,mBAAmBC,OAAOL,EAAa,UACjEb,EAAaa,EAAY,OACzBM,QAAQC,IAAIxB,GACZC,EAAUD,EACZ,CAAE,MAAOyB,GACPF,QAAQC,IAAIC,EACd,GAGFC,EAAa,GACZ,CAACrB,KAGFsB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,GAAGH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAN,UACVC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAEVC,EAAAA,EAAAA,KAACM,EAAAA,GAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACC,QApEI,CACpB,CACEC,IAAK,QACLC,MAAO,QACPC,OAAQ,CAAEC,MAAO,QAEnB,CACEH,IAAK,SACLC,MAAO,SACPC,OAAQ,CAAEC,MAAO,QAEnB,CACEH,IAAK,QACLC,MAAO,UACPC,OAAQ,CAAEC,MAAO,QAEnB,CACEH,IAAK,aACLC,MAAO,eACPC,OAAQ,CAAEC,MAAO,QAEnB,CACEH,IAAK,QACLC,MAAO,QACPC,OAAQ,CAAEC,MAAO,SA4CqBC,MAAO3C,EAAQ4C,OAAK,EAACC,SAAO,EAACC,UAAQ,EAACC,KAAK,UAE7EpB,EAAAA,EAAAA,MAAA,OAAKO,UAAU,wDAAuDL,SAAA,EACpEC,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CACNC,UAAU,QACVC,KAAK,SACLC,MAAM,UACNC,MAAM,WACNlB,UAAU,OACVmB,MAAO,CAAEC,YAAa,QACtBC,QAASA,IAAMjD,EAAiB,IAATD,EAAa,EAAIA,EAAO,GAC/CmD,SAAmB,IAATnD,KAEZyB,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CACNC,UAAU,QACVC,KAAK,SACLC,MAAM,UACNC,MAAM,OACNlB,UAAU,OACVqB,QAASA,IAAMjD,EAAQD,IAASF,EAAYA,EAAYE,EAAO,GAC/DmD,SAAUnD,IAASF,cAKtB,C","sources":["views/query/history/History.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CTable, CButton } from '@coreui/react'\n\nconst QueryHistory = () => {\n  const detailColumns = [\n    {\n      key: 'query',\n      label: 'Query',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'column',\n      label: 'Column',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'value',\n      label: 'Content',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'full_value',\n      label: 'Full Content',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'score',\n      label: 'Score',\n      _props: { scope: 'col' },\n    },\n  ]\n\n  const baseUrl = '/api'\n\n  const [result, setResult] = useState(null)\n  const [totalRows, setTotalRows] = useState(0)\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    const loadHistory = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/test_query_history?page=${page}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n          },\n        })\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`)\n        }\n        const data = await response.json()\n        const result = JSON.parse(decodeURIComponent(escape(data['result']))) // convert result to JSON object and ensure it's in UTF-8 format\n        setTotalRows(data['total'])\n        console.log(result)\n        setResult(result)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    loadHistory()\n  }, [page])\n\n  return (\n    <CRow>\n      <h1>Query Test History</h1>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>History</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CTable columns={detailColumns} items={result} hover striped bordered size=\"sm\" />\n          </CCardBody>\n          <div className=\"mb-3 button-group spaced-buttons flex justify-between\">\n            <CButton\n              component=\"input\"\n              type=\"button\"\n              color=\"primary\"\n              value=\"PREVIOUS\"\n              className=\"mr-4\"\n              style={{ marginRight: '12px' }}\n              onClick={() => setPage(page === 1 ? 1 : page - 1)}\n              disabled={page === 1}\n            />\n            <CButton\n              component=\"input\"\n              type=\"button\"\n              color=\"primary\"\n              value=\"NEXT\"\n              className=\"mr-4\"\n              onClick={() => setPage(page === totalRows ? totalRows : page + 1)}\n              disabled={page === totalRows}\n            />\n          </div>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default QueryHistory\n"],"names":["QueryHistory","result","setResult","useState","totalRows","setTotalRows","page","setPage","useEffect","async","response","fetch","concat","method","headers","ok","Error","status","data","json","JSON","parse","decodeURIComponent","escape","console","log","error","loadHistory","_jsxs","CRow","children","_jsx","CCol","xs","CCard","className","CCardHeader","CCardBody","CTable","columns","key","label","_props","scope","items","hover","striped","bordered","size","CButton","component","type","color","value","style","marginRight","onClick","disabled"],"sourceRoot":""}