{"version":3,"file":"static/js/2618.5756597f.chunk.js","mappings":"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","sources":["views/prompts/Prompts.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormTextarea,\n  CButton,\n  CTable,\n  CSpinner,\n} from '@coreui/react'\n\nconst PromptEngineering = () => {\n  const columns = [\n    {\n      key: 'prompt',\n      label: 'Prompt',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'query',\n      label: 'Query',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'result',\n      label: 'Result',\n      _props: { scope: 'col' },\n    },\n  ]\n\n  const baseUrl = '/api'\n\n  const [result, setResult] = useState(null)\n  const [systemPrompt, setSystemPrompt] = useState('')\n  const [query, setQuery] = useState('')\n  const [history, setHistory] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async () => {\n    setLoading(true)\n    try {\n      const response = await fetch(`${baseUrl}/prompt_engineering`, {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify({\n          systemPrompt: systemPrompt,\n          query: query,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n      const data = await response.json()\n      const result = data['data']['response']\n      setResult(result)\n      setHistory([...history, { prompt: systemPrompt, query: query, result: result }])\n    } catch (error) {\n      console.error('Fetch Error:', error)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <CRow>\n      <h1>Prompt Engineering Playground</h1>\n      <p>This is a playground for testing out the Prompt Engineering. It is a work in progress.</p>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Generation</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm>\n              <div className=\"mb-3\">\n                <CFormTextarea\n                  id=\"System Prompt\"\n                  label=\"Instruction for LLM\"\n                  rows={3}\n                  value={systemPrompt}\n                  onChange={(e) => setSystemPrompt(e.target.value)}\n                ></CFormTextarea>\n              </div>\n              <div className=\"mb-3\">\n                <CFormTextarea\n                  id=\"Query\"\n                  label=\"Query\"\n                  rows={3}\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                ></CFormTextarea>\n              </div>\n              {loading ? (\n                <CButton disabled>\n                  <CSpinner component=\"span\" size=\"sm\" aria-hidden=\"true\" /> Loading...\n                </CButton>\n              ) : (\n                <div className=\"mb-3 button-group spaced-buttons flex justify-between\">\n                  <CButton\n                    component=\"input\"\n                    type=\"button\"\n                    color=\"primary\"\n                    value=\"Submit\"\n                    onClick={handleSubmit}\n                    className=\"mr-4\"\n                    style={{ marginRight: '12px' }}\n                  />\n                  <CButton\n                    component=\"input\"\n                    type=\"button\"\n                    color=\"warning\"\n                    value=\"Set as Default\"\n                    disabled\n                  />\n                </div>\n              )}\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Result</strong>\n          </CCardHeader>\n          <CCardBody>{result && <p>{result}</p>}</CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>History</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CTable columns={columns} items={history} hover striped bordered size=\"sm\" />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default PromptEngineering\n"],"names":["PromptEngineering","result","setResult","useState","systemPrompt","setSystemPrompt","query","setQuery","history","setHistory","loading","setLoading","_jsxs","CRow","children","_jsx","CCol","xs","CCard","className","CCardHeader","CCardBody","CForm","CFormTextarea","id","label","rows","value","onChange","e","target","CButton","disabled","CSpinner","component","size","type","color","onClick","async","response","fetch","concat","method","mode","body","JSON","stringify","headers","ok","Error","status","json","prompt","error","console","style","marginRight","CTable","columns","key","_props","scope","items","hover","striped","bordered"],"sourceRoot":""}